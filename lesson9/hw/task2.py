# В программировании иногда возникает ситуация, когда работу функции нужно
# замедлить. Типичный пример — функция, которая постоянно проверяет,
# изменились ли данные на веб-странице или её код.
# Реализуйте декоратор, который перед выполнением декорируемой функции
# ждёт несколько секунд.
# Подсказка № 1
# Используйте функцию sleep из модуля time для задержки выполнения. Функция sleep
# позволяет приостановить выполнение текущего потока на указанное количество
# секунд.
# Подсказка № 2
# Убедитесь, что в функции sleep передается число секунд. Время ожидания должно
# быть указано в секундах. Если необходимо, преобразуйте время в секунды (например,
# 2000 миллисекунд = 2 секунды).

import time
import functools


def decorator(func):
    input('Введи что угодно: ')

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        print('wait')
        time.sleep(5)
        print('do')
        return func(*args, **kwargs)

    return wrapper


@decorator
def main_func():
    print('prog is work')
    

if __name__ == '__main__':
    main_func()
